package firstproject;
import java.util.*;
public class workspace2 {
	 public static class par{
	        int first;
	        int second;
	        public par(int first,int second){
	            this.first=first;
	            this.second=second;
	        }
//	        public String toString() {
//	        	return "r"+this.first;
//	        }
	    }
	  public static class sorti implements Comparator<par>{
	       

			@Override
			public int compare(par p1, par p2) {
				
				 return p1.first-p2.first;
			}
	    }
	  public static class sortis implements Comparator<par>{
	       

			@Override
			public int compare(par p1, par p2) {
				
				 return p2.first-p1.first;
			}
	    }
	   
	    public static void maxSubsequence(int[] nums, int k) {
	        int n = nums.length; 
	       
	        if (k == 0) return; 
	        if (k == n) return ;
	      
	        PriorityQueue<par> minHeap = new PriorityQueue<>(new sorti()); 
	        
	        for(int i = 0; i < n; i++) {
	            minHeap.add(new par(nums[i], i));
	            if (minHeap.size() > k) {
	                minHeap.poll();
	            }
	        }
	        
	        List<par>l1=new ArrayList<>(minHeap);
	        Collections.sort(l1,new sortis());
	      for(int i=0;i<l1.size();i++) {
	    	  int p=l1.get(i).first;
	    	  System.out.print(p+" ");
	      }
	       
	    }
	
	public static void main(String[] args) {
		
		int nums[]= {50,-75,25,15,4,9,1,-34};
		int k=4;
		System.out.println();
		maxSubsequence(nums,k);
		}
	}


